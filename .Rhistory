test2 <- data %>%
group_by(Item_Type) %>%
mutate(Item_Weight = impute_mean(Item_Weight))
test2
summary(test2)
head(test2)
head(data)
?head
summary(data)
summary(test2)
test2
a <- data %>%
group_by(Item_Type) %>%
filter(is.na(Item_Weight)) %>%
count()
ggplot(a, aes(Item_Type, n)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(angle=75, vjust=0.7))
b <- data %>%
group_by(Item_Type) %>%
summarise_at(vars(Item_Weight), funs(mean(., na.rm=T)))
b
a <- ggplot(data, aes(Outlet_Size, Outlet_Location_Type)) +
geom_point()
b <- ggplot(data, aes(Outlet_Size, Outlet_Type)) +
geom_point()
grid.arrange(a, b, ncol=2)
sapply(data, function(x) n_distinct(x))
summary(data)
ggplot(data, aes(Item_Visibility, Item_Outlet_Sales)) +
geom_point(size = 0.75)
ggplot(data, aes(Item_Type, Item_Outlet_Sales)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=60, vjust=0.75))
ggplot(data, aes(Item_Type, Item_Visibility)) +
geom_point(size=0.75) +
theme(axis.text.x = element_text(angle=90, vjust=0.8))
ggplot(train, aes(Item_Visibility, Item_Outlet_Sales, color = Item_Type)) +
geom_point(size = 0.75)
ggplot(data, aes(Item_Type, Item_Visibility)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle=90, vjust=0.8))
ggplot(data, aes(Item_Type, Item_Visibility)) +
geom_boxplot()
ggplot(data, aes(Item_Type, Item_Visibility)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle=90, vjust=0.8))
zero_viz <- data %>%
filter(Item_Visibility == 0 & Item_Outlet_Sales > 0)
avg <- data %>%
summarize(mean(Item_Visibility))
data <- data %>%
mutate(Item_Visibility = replace(Item_Visibility, Item_Visibility == 0, 2)) %>%
mutate(Item_Visibility = as.double(Item_Visibility))
head(data)
summary(data)
dim(train)
train <- data[1:8523]
train <- data[1:8523,]
dim(train)
test <- data[8524:nrow(data),]
dim(test)
head(test)
store_lm <- lm(Item_Outlet_Sales~., train)
store_lm <- lm(Item_Outlet_Sales~., train)
2+2
summary(store_lm)
mean_sales <- mean(train$Item_Outlet_Sales)
mean_sales
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier)
base1
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
base1
store_lm <- lm(Item_Outlet_Sales~(-Item_Identifier + Outlet_Identifier), train)
summary(store_lm)
store_lm <- lm(Item_Outlet_Sales~(-Item_Identifier, Outlet_Identifier), train)
store_lm <- lm(Item_Outlet_Sales~(-Item_Identifier -Outlet_Identifier), train)
summary(store_lm)
store_lm <- lm(Item_Outlet_Sales~.-Item_Identifier -Outlet_Identifier, train)
summary(store_lm)
glmnet?
v
store_lm <- lm(Item_Outlet_Sales~.-Item_Identifier -Outlet_Identifier, train)
summary(store_lm)
par(mfrow <- c(2,2))
plot(store_lm)
?contrasts
ggpairs(data)
library(GGally)
install.packages("GGally")
library(GGally)
ggpairs(data)
colnames(data)
ggpairs(subsect(data, select = -c(Item_Identifier, Outlet_Identifier))
ggpairs(subsect(data, select = -c(Item_Identifier, Outlet_Identifier))
ggpairs(subset(data, select = -c(Item_Identifier, Outlet_Identifier))
ggpairs(subset(data, select = -c(Item_Identifier, Outlet_Identifier))
cor_df <- subset(data, select = -c(Item_Identifier, Outlet_Identifier))
ggpairs(cor_df)
ggpairs(cor_df[1:15])
ggpairs(cor_df[,1:15])
ggpairs(cor_df[,1:ncol(cor_df)])
cor_df <- subset(data, select = -c(Item_Identifier, Item_Type, Outlet_Identifier))
ggpairs(cor_df)
cor(cor_df)
cor(cor_df[,1:14])
dim(cor_df)
cor(cor_df[,1:9])
cor_df <- subset(data, select = -c(Item_Identifier, Item_Type, Outlet_Identifier))
cor(cor_df[,1:9])
cor(cor_df[,1:ncol(cor_df)])
head(cor_df)
confint(store_lm)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(glmnet)
train <- read.csv('Train.csv')
test <- read.csv('Test.csv')
head(train)
test <- mutate(test, Item_Outlet_Sales = 0)
dim(train)
dim(test)
data <- rbind(train, test)
dim(data)
str(data)
sapply(data[,2:ncol(data)], levels)
data <- data %>%
mutate(Item_Fat_Content = replace(Item_Fat_Content, Item_Fat_Content == 'LF', 'Low Fat')) %>%
mutate(Item_Fat_Content = replace(Item_Fat_Content, Item_Fat_Content == 'low fat', 'Low Fat')) %>%
mutate(Item_Fat_Content = replace(Item_Fat_Content, Item_Fat_Content == 'reg', 'Regular')) %>%
droplevels()
data %>%
group_by(Outlet_Location_Type, Outlet_Type, Outlet_Size) %>%
count()
data <- data %>%
mutate(Outlet_Size = replace(Outlet_Size, Outlet_Size == '' & Outlet_Location_Type == 'Tier 2', 'Small')) %>%
mutate(Outlet_Size = replace(Outlet_Size, Outlet_Size == '' & Outlet_Location_Type == 'Tier 3', 'Small'))
sapply(data, function(x) sum(x == ''))
impute_mean <- function(x) replace(x, is.na(x), mean(x, na.rm = T))
data <- data %>%
group_by(Item_Type) %>%
mutate(Item_Weight = impute_mean(Item_Weight))
train <- data[1:8523,]
test <- data[8524:nrow(data),]
mean_sales <- mean(train$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
base1
store_lm <- lm(Item_Outlet_Sales~.-Item_Identifier -Outlet_Identifier, train)
summary(store_lm)
par(mfrow <- c(2,2))
plot(store_lm)
plot(store_lm)
summary(store_lm)
?glmnet
grid <- 10^seq(10, -2, length=100)
store_lasso <- glmnet(Item_Outlet_Sales~. -Item_Identifier -Outlet_Identifier, train, lambda=grid)
colnames(data)
x <- tibble(subset(data, select = -c(Item_Identifier, Outlet_Identifier, Item_Outlet_Sales))
head(x)
x <- tibble(subset(data, select = -c(Item_Identifier, Outlet_Identifier, Item_Outlet_Sales)))
head(x)
x <- tibble(subset(data, select = -c(Item_Identifier, Outlet_Identifier, Item_Outlet_Sales)))
x <- subset(data, select = -c(Item_Identifier, Outlet_Identifier, Item_Outlet_Sales))
head(x)
y <- data[-1]
head(y)
head(y)
y <- data[,-1]
head(y)
y <- data$Item_Outlet_Sales
head(y)
y <- data %>%
select(-1)
head(y)
cor_df <- data %>%
select_if(is.numeric())
cor_df <- data %>%
select_if(is.numeric)
head(cor_df)
y <- as.tibble(data$Item_Outlet_Sales)
head(y)
store_lasso <- glmnet(x, y, train, lambda=grid)
store_lasso <- glmnet(x, y, lambda=grid)
head(y)
store_lasso <- glmnet(x, y, lambda=grid)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(glmnet)
train <- read.csv('Train.csv')
test <- read.csv('Test.csv')
head(train)
test <- mutate(test, Item_Outlet_Sales = 0)
dim(train)
dim(test)
data <- rbind(train, test)
dim(data)
str(data)
data <- data %>%
mutate(Item_Fat_Content = replace(Item_Fat_Content, Item_Fat_Content == 'LF', 'Low Fat')) %>%
mutate(Item_Fat_Content = replace(Item_Fat_Content, Item_Fat_Content == 'low fat', 'Low Fat')) %>%
mutate(Item_Fat_Content = replace(Item_Fat_Content, Item_Fat_Content == 'reg', 'Regular')) %>%
droplevels()
data <- data %>%
mutate(Outlet_Size = replace(Outlet_Size, Outlet_Size == '' & Outlet_Location_Type == 'Tier 2', 'Small')) %>%
mutate(Outlet_Size = replace(Outlet_Size, Outlet_Size == '' & Outlet_Location_Type == 'Tier 3', 'Small'))
sapply(data, function(x) sum(x == ''))
impute_mean <- function(x) replace(x, is.na(x), mean(x, na.rm = T))
data <- data %>%
group_by(Item_Type) %>%
mutate(Item_Weight = impute_mean(Item_Weight))
data <- data %>%
mutate(Years_Open = 2013 -Outlet_Establishment_Year)
data <- data[, c(1,2,3,4,5,6,7,13,9,10,11,12)]
head(data)
zero_viz <- data %>%
filter(Item_Visibility == 0 & Item_Outlet_Sales > 0)
avg <- data %>%
summarize(mean(Item_Visibility))
data <- data %>%
mutate(Item_Visibility = replace(Item_Visibility, Item_Visibility == 0, 2)) %>%
mutate(Item_Visibility = as.double(Item_Visibility))
summary(data)
mse <- function(x, y) {
mean((x - y)^2)
}
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test_x <- test[,-c(1,7,12)]
test_y <- test[,12]
train <- train[train_samp,]
train_x <- train[,-c(1,7)]
train_y <- train[,12]
real_test <- data[8524:nrow(data),]
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test_x <- test[,-c(1,7,12)]
test_y <- test[,12]
train <- train[train_samp,]
train_x <- train[,-c(1,7)]
train_y <- train[,12]
real_test <- data[8524:nrow(data),]
mean_sales <- mean(train$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,3], test_y)
cat('MSE of baseline model:', mse_base1)
head(train_x)
train_x <- train[,-c(1,7,12)]
train_x <- train[,-c(1,7)]
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
lm_pred <- predict(store_lm, newx=test_x]
lm_pred <- predict(store_lm, newx=test_x)
store_lm <- lm(Item_Outlet_Sales~., train_x)
summary(store_lm)
plot(store_lm)
lm_pred <- predict(store_lm, newx=test_x)
mse_lm <- mse(lm_pred, test_y)
cat('Linear model MSE: ', mse_lm)
cat('MSE of baseline model:', mse_base1)
mean_sales <- mean(train$Item_Outlet_Sales)
mean_sales <- mean(train_x$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,3], test_y)
cat('MSE of baseline model:', mse_base1)
mean_sales
base1
train_y
mse_lm
lm_pred
library(ISLR)
Boston
library(MASS)
Boston
Carseats
levels(train_x)
sapply(data[,2:ncol(data)], levels)
testor <- lm(Item_Outlet_Sales ~ Item_MRP + Years_Open + Outlet_Type, train_x)
summary(testor)
testor <- lm(Item_Outlet_Sales ~ Item_MRP + Years_Open + Outlet_Type, train_x)
summary(testor)
pray_pred <- predict(testor, newx=test_x)
mse(pray_pred, test_y)
test_y
test_x
mse(pray_pred, test_y)
summary(train)
sqrt(4547192)
1128**2
head(data)
a <- laply(seq(1, nchar(data[,1]), 2), function(i) substr(x, i, i+1))
a <- lapply(seq(1, nchar(data[,1]), 2), function(i) substr(x, i, i+1))
a <- lapply(seq(1, nchar(data[,1]), 2), function(i) substr(data[,1], i, i+1))
?substr
data[,1]
poop <- data
a <- substr(poop[,1],1,2)
a
poop
?seperate
?separate
base <- poop %>%
seperate(Item_Identifier, c('Item_Category', 'Item_Identifier'), 2)
base <- poop %>%
seperate(Item_Identifier, c('Item_Category', 'Item_Identifier'), sep=2)
base <- poop %>%
separate(Item_Identifier, c('Item_Category', 'Item_Identifier'), sep=2)
head(base)
data <- data %>%
separate(Item_Identifier, c('Item_Category', 'Item_Identifier'), sep=2)
head(data)
colnames(data)
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test_x <- test[,-c(2,7,13)]
test_y <- test[,13]
train <- train[train_samp,]
train_x <- train[,-c(2,7)]
train_y <- train[,13]
real_test <- data[8524:nrow(data),]
head(train_x)
mean_sales <- mean(train_x$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,3], test_y)
cat('MSE of baseline model:', mse_base1)
store_lm <- lm(Item_Outlet_Sales~., train_x)
summary(store_lm)
plot(store_lm)
lm_pred <- predict(store_lm, newx=test_x)
mse_lm <- mse(lm_pred, test_y)
cat('Linear model MSE: ', mse_lm)
head(data)
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test_x <- test[,-c(2,8,13)]
test_y <- test[,13]
train <- train[train_samp,]
train_x <- train[,-c(2,8)]
train_y <- train[,13]
real_test <- data[8524:nrow(data),]
mean_sales <- mean(train_x$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,3], test_y)
cat('MSE of baseline model:', mse_base1)
store_lm <- lm(Item_Outlet_Sales~., train_x)
summary(store_lm)
plot(store_lm)
testor <- lm(Item_Outlet_Sales ~ Item_MRP + Years_Open + Outlet_Type, train_x)
summary(testor)
pray_pred <- predict(testor, newx=test_x)
mse(pray_pred, test_y)
lm_pred <- predict(store_lm, newx=test_x)
mse_lm <- mse(lm_pred, test_y)
cat('Linear model MSE: ', mse_lm)
test_x <- test[,-13]
colnames(test_x)
test_y <- test[,13]
train_x <- train[,-c(13)]
train_y <- train[,13]
mean_sales <- mean(train_x$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,3], test_y)
cat('MSE of baseline model:', mse_base1)
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test_x <- test[,-13]
test_y <- test[,13]
train <- train[train_samp,]
train_x <- train[,-c(13)]
train_y <- train[,13]
real_test <- data[8524:nrow(data),]
mean_sales <- mean(train_x$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,3], test_y)
cat('MSE of baseline model:', mse_base1)
mean_sales <- mean(train_y$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,3], test_y)
cat('MSE of baseline model:', mse_base1)
store_lm <- lm(Item_Outlet_Sales~., train_x)
test_x <- test[,]
test_x
store_lm <- lm(Item_Outlet_Sales~., train_x)
train_x <- train[,]
store_lm <- lm(Item_Outlet_Sales~., train_x)
summary(store_lm)
plot(store_lm)
lm_pred <- predict(store_lm, newx=test_x)
mse_lm <- mse(lm_pred, test_y)
cat('Linear model MSE: ', mse_lm)
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test_x <- test[,-c(2,13)]
test_y <- test[,13]
train <- train[train_samp,]
train_x <- train[,-2]
train_y <- train[,13]
real_test <- data[8524:nrow(data),]
dim(train_x)
colnames(train_x)
store_lm <- lm(Item_Outlet_Sales~., train_x)
summary(store_lm)
plot(store_lm)
lm_pred <- predict(store_lm, newx=test_x)
mse_lm <- mse(lm_pred, test_y)
cat('Linear model MSE: ', mse_lm)
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test_x <- test[,-c(2,8,13)]
test_y <- test[,13]
train <- train[train_samp,]
train_x <- train[,-c(2,8)]
train_y <- train[,13]
real_test <- data[8524:nrow(data),]
store_lm <- lm(Item_Outlet_Sales~., train_x)
summary(store_lm)
plot(store_lm)
lm_pred <- predict(store_lm, newx=test_x)
mse_lm <- mse(lm_pred, test_y)
cat('Linear model MSE: ', mse_lm)
testor <- lm(Item_Outlet_Sales ~ Item_MRP + Years_Open + Outlet_Type, train_x)
summary(testor)
pray_pred <- predict(testor, newx=test_x)
mse(pray_pred, test_y)
train_samp
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test <- test[,-2]
train <- train[train_samp,]
train <- train[,-2]
real_test <- data[8524:nrow(data),]
colnames(test)
mean_sales <- mean(train$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
train <- train[train_samp,]
real_test <- data[8524:nrow(data),]
mean_sales <- mean(train$Item_Outlet_Sales)
base1 <- tibble(test$Item_Identifier, test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,3], test[,13])
cat('MSE of baseline model:', mse_base1)
store_lm <- lm(Item_Outlet_Sales~., train_x)
summary(store_lm)
plot(store_lm)
store_lm <- lm(Item_Outlet_Sales~., train)
summary(store_lm)
plot(store_lm)
lm_pred <- predict(store_lm, newx=test)
mse_lm <- mse(lm_pred, test[,13])
cat('Linear model MSE: ', mse_lm)
dim(test)
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test <- test[,-c(2,8)]
train <- train[train_samp,]
train <- train[,-c(2,8)]
real_test <- data[8524:nrow(data),]
mean_sales <- mean(train$Item_Outlet_Sales)
base1 <- tibble(test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
set.seed(1)
train <- data[1:8523,]
train_samp <- sample(1:nrow(train), nrow(train)*0.7)
test <- train[-train_samp,]
test <- test[,-c(2)]
train <- train[train_samp,]
train <- train[,-c(2)]
real_test <- data[8524:nrow(data),]
mean_sales <- mean(train$Item_Outlet_Sales)
base1 <- tibble(test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,3], test[,13])
colnames(train)
mean_sales <- mean(train$Item_Outlet_Sales)
base1 <- tibble(test$Outlet_Identifier, 'Item_Outlet_Sales' = mean_sales)
mse_base1 <- mse(base1[,2], test[,12])
cat('MSE of baseline model:', mse_base1)
store_lm <- lm(Item_Outlet_Sales~., train)
summary(store_lm)
plot(store_lm)
lm_pred <- predict(store_lm, newx=test)
mse_lm <- mse(lm_pred, test[,12])
cat('Linear model MSE: ', mse_lm)
testor <- lm(Item_Outlet_Sales ~ Item_MRP + Years_Open + Outlet_Type, train)
summary(testor)
pray_pred <- predict(testor, newx=test)
mse(pray_pred, test[,12])
train_x_mm <- mod_mat[][train_samp,]
train <- data[1:8523,]
grid <- 10^seq(10, -2, length=100)
mod_mat <- model.matrix(Item_Outlet_Sales~.,  train)
train_x_mm <- mod_mat[][train_samp,]
train_x_mm
head(train_x_mm)
mod_mat
